- logfile: /var/logs/PBS-server_priv-accounting
  patterns:
    - job:
        re:
          - _requestoropen: '(:? ()' 
          - date.date:        '(\d{2}/\d{2}/\d{4}) \s+'
          - time.time:        '(\d{2}:\d{2}:\d{2});'
          - flag:             '([SEQD]);'
          - jobid.int:         '([^;]+);'
          - requestor:        'requestor=(\S+).*'
          - _requestorclose: ')? ()'
          - _allopen: '(:? ()' 
          - date.date:        '(\d{2}/\d{2}/\d{4}) \s+'
          - time.time:        '(\d{2}:\d{2}:\d{2});'
          - flag:             '([SEQ]);'
          - _jobidopen:  '(:? ()'
          - jobid:            '([^;]+);'
          - _jobidclose: ')? ()'
          - _useropen:   '(:? ()'
          - user:             'user=      (\S+) \s+'
          - group:            'group=     (\S+) \s+'
          - jobname:          'jobname=   (\S+) \s+'
          - _userclose: ')? ()'
          - _queueopen: '(:? ()'
          - queue:            'queue=     (\S+) \s+'
          - _queueclose: ') ()'
          - _jobdataopen: '(:? ()'
          - ctime.timestamp:  'ctime=     (\d+) \s+'
          - qtime.timestamp:  'qtime=     (\d+) \s+'
          - etime.timestamp:  'etime=     (\d+) \s+'
          - start.timestamp:  'start=     (\d+) \s+'
          - exec_host:        'exec_host=                 (\S+) \s+'
          - listed_cpu_time.duration:  'Resource_List[.]cput=      (\d*:\d{2}:\d{2}) \s+'
          - _lmemopen: '(:? ()'
          - listed_mem:       'Resource_List[.]mem=       (\d+\w+) \s+' 
          - _lmemclose: ')? ()'
          - listed_neednodes: 'Resource_List[.]neednodes= (\S+) \s+' 
          - listed_nice.int:  'Resource_List[.]nice=      (\d+) \s+' 
          - listed_nodect.int: 'Resource_List[.]nodect=    (\d+) \s+' 
          - listed_nodes.int: 'Resource_List[.]nodes=     (\S+) \s+' 
          - _memopen: '(:? ()'
          - listed_pmem:      'Resource_List[.]pmem=      (\d+\w+) \s+'
          - listed_pvmem:     'Resource_List[.]pvmem=     (\d+\w+) \s+'
          - _memclose: ')? ()'
          - listed_walltime.duration: 'Resource_List[.]walltime=  (\d{2}:\d{2}:\d{2}) \s+'
          - _jobendopen: '(:? ()'
          - session.int:      'session=                   (\d+) \s+'
          - end.timestamp:    'end=                       (\d+) \s+'
          - exit_status.int:  'Exit_status=               (\d+) \s+'
          - used_cput.duration: 'resources_used[.]cput=     (\d{2}:\d{2}:\d{2}) \s+'
          - used_mem:         'resource_used[.]mem=       (\d+\w+) \s+'
          - used_vmem:        'resurces_used[.]vmem=      (\d+\w+) \s+'
          - used_walltime.duration:    'resources_used[.]walltime= (\d{2}:\d{2}:\d{2}) \s+'
          - _jobendclose: ')? ()'
          - _jobdataclose: ')? ()'
          - _allclose: ')? ()'
        tags:
          jobstart:
            flag: '^S$'
          jobend:
            flag: '^E$'
          queue:
            flag: '^Q$'
          deletion:
            flag: '^D$'
          atlas_kitvalidation:
            jobname: '^KitValidation-'
          failure:
            exit_status: '^[^0]+$'
          exit_non_zero:
            exit_status: '^[^0]+$'
